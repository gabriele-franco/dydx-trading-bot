from dydx3.constants import API_HOST_GOERLI, API_HOST_MAINNET
from decouple import config

#!!SELECT MODE !!

MODE = "DEVELOPMENT"

#Close all position in DYDX

ABORT_ALL_POSITIONS= True 

# Find Cointegrated pairs
FIND_COINTEGRATED= True 

#PLACE Exits
MANAGE_EXITS=True

#PLACE Trades
PLACE_TRADES=True

#Resolution
RESOLUTION="1HOUR"

#Start window
WINDOW=21

#Threashold - Opening
MAX_HALF_LIFE=24
Z_SCORE_THRESH= 1.5
USD_PER_TRADE=50
USD_MIN_COLLATERAL= 2000


#Threashold - Closing
CLOSE_AT_ZSCORE_CROSS=True

ETHEREUM_ADDRESS="0x889FfC589131b76Aa409493f8211FB74da3755ec"

#KEYS - Production
#must remember to be in mainnet when you get the keys

STARK_PRIVATE_KEY_MAINNET=config("STARK_PRIVATE_KEY_MAINNET")
DYDX_API_KEY_MAINNET=config("DYDX_API_KEY_MAINNET")
DYDX_SECRET_MAINNET=config("DYDX_SECRET_MAINNET")
DYDX_API_PASSPHRASE_MAINNET=config("DYDX_API_PASSPHRASE_MAINNET")


#KEYS - testnet
#must remember to be in mainnet when you get the keys

STARK_PRIVATE_KEY_TESTNET=config("STARK_PRIVATE_KEY_TESTNET")
DYDX_API_KEY_TESTNET=config("DYDX_API_KEY_TESTNET")
DYDX_SECRET_TESTNET=config("DYDX_SECRET_TESTNET")
DYDX_API_PASSPHRASE_TESTNET=config("DYDX_API_PASSPHRASE_TESTNET")

#Keys - exports

STARK_PRIVATE_KEY= STARK_PRIVATE_KEY_MAINNET if MODE=="PRODUCTION" else STARK_PRIVATE_KEY_TESTNET
DYDX_API_KEY= DYDX_API_KEY_MAINNET if MODE=="PRODUCTION" else DYDX_API_KEY_TESTNET
DYDX_SECRET= DYDX_SECRET_MAINNET if MODE=="PRODUCTION" else DYDX_SECRET_TESTNET
DYDX_API_PASSPHRASE= DYDX_API_PASSPHRASE_MAINNET if MODE=="PRODUCTION" else DYDX_API_PASSPHRASE_TESTNET


#host
HOST= API_HOST_MAINNET if MODE == "PRODUCTION" else API_HOST_GOERLI


#Http provider

HTTP_PROVIDER_MAINNET="https://eth-mainnet.g.alchemy.com/v2/WBIWS0FEolmyVLMMzcHcVOs_E2c_DQM1"
HTTP_PROVIDER_TESTNET="https://eth-goerli.g.alchemy.com/v2/UmAbSX1I7YapXBuESSh20WcqCrvFRRTP"

HTT_PROVIDER= HTTP_PROVIDER_MAINNET if MODE == "PRODUCTION" else HTTP_PROVIDER_TESTNET